plugins {
    id 'java-library'
    id 'maven-publish'
    id 'maven'
    id 'jacoco'
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'com.jfrog.bintray' version '1.8.5'
    id 'com.github.ben-manes.versions' version '0.28.0'
    id 'net.researchgate.release' version '2.8.1'
    id 'com.github.breadmoirai.github-release' version '2.2.12'
}

repositories {
	jcenter()
	mavenCentral()
	mavenLocal()
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}

dependencies {
    api 'io.lettuce:lettuce-core'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.slf4j:slf4j-simple'
	testImplementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv'
	testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.junit.jupiter:junit-jupiter-params'
    testImplementation 'org.testcontainers:testcontainers:1.14.3'
    testImplementation 'org.testcontainers:junit-jupiter:1.14.3'
}

test {
    useJUnitPlatform()
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : ''
    key = project.hasProperty('bintrayKey') ? project.property('bintrayKey') : ''
    publications = ['mavenJava']
    publish = true
    pkg {
        repo = 'maven'
        name = 'lettusearch'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/RediSearch/lettusearch.git'
	    version {
	        gpg {
	            sign = true
	        }
	        mavenCentralSync {
	            sync = true
	            user = project.hasProperty('ossrhUsername') ? project.property('ossrhUsername') : ''
	            password = project.hasProperty('ossrhPassword') ? project.property('ossrhPassword') : ''
	        }
	    }
    }
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar, javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId 'com.redislabs'
            artifactId 'lettusearch'

            pom {
                name = 'LettuSearch'
                packaging = 'jar'              
                description = 'Java client for RediSearch based on Lettuce'
                url = 'https://github.com/RediSearch/lettusearch/'

		        scm {
		          connection = 'scm:git:git://github.com/RediSearch/lettusearch.git'
		          developerConnection = 'scm:git:git@github.com:RediSearch/lettusearch.git'
		          url = 'https://github.com/RediSearch/lettusearch'
		        }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'jruaux'
                        name = 'Julien Ruaux'
                    }
                }
            }
        }
    }
}

group = 'com.redislabs'
description = 'Java client for RediSearch based on Lettuce'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

check.dependsOn jacocoTestReport

task printVersion {
    doLast {
        println project.version
    }
}

githubRelease {
    token = project.hasProperty('githubToken') ? project.property('githubToken') : ''
    owner "RediSearch"
    repo "lettusearch"
    body changelog()
}

afterReleaseBuild.dependsOn ":githubRelease"
afterReleaseBuild.dependsOn bintrayUpload
