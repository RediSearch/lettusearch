plugins {
    id 'java-library'
    id 'distribution'
    id 'java-library-distribution'
    id 'maven-publish'
    id 'jacoco'
    id 'com.jfrog.bintray' version '1.8.5'
    id 'net.researchgate.release' version '2.8.1'
    id 'com.github.breadmoirai.github-release' version '2.2.12'
}

group = 'com.redislabs'
description = 'Java client for RediSearch based on Lettuce'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

java {
    withJavadocJar()
    withSourcesJar()
}

repositories {
    jcenter()
    mavenCentral()
    mavenLocal()
}

dependencies {
    api 'io.lettuce:lettuce-core:5.3.1.RELEASE'
    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    testImplementation 'org.slf4j:slf4j-simple:1.7.30'
    testImplementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.11.1'
    testImplementation 'io.projectreactor:reactor-test:3.3.7.RELEASE'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.6.2'
    testImplementation 'org.testcontainers:testcontainers:1.14.3'
    testImplementation 'org.testcontainers:junit-jupiter:1.14.3'
}

test {
    useJUnitPlatform()
}

distributions {
    main {
        contents {
            from (project.docsDir) {
                into 'docs'
            }
            from 'README.adoc'
            from 'LICENSE'
        }
    }
}

distTar {
    compression = Compression.GZIP
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'LettuSearch'
                description = 'Java client for RediSearch based on Lettuce'
                url = 'https://github.com/RediSearch/lettusearch'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'jruaux'
                        name = 'Julien Ruaux'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/RediSearch/lettusearch.git'
                    developerConnection = 'scm:git:git@github.com:RediSearch/lettusearch.git'
                    url = 'https://github.com/RediSearch/lettusearch'
                }
            }
        }
    }
}


jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : ''
    key = project.hasProperty('bintrayKey') ? project.property('bintrayKey') : ''
    publications = ['mavenJava']
    publish = true
    pkg {
        repo = 'maven'
        name = project.name
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/RediSearch/lettusearch.git'
        version {
            gpg {
                sign = true
            }
            mavenCentralSync {
                sync = true
                user = project.hasProperty('ossrhUsername') ? project.property('ossrhUsername') : ''
                password = project.hasProperty('ossrhPassword') ? project.property('ossrhPassword') : ''
            }
        }
    }
}


githubRelease {
    token = project.hasProperty('githubToken') ? project.property('githubToken') : ''
    owner "RediSearch"
    repo "lettusearch"
    releaseAssets distZip, distTar
    body changelog()
}

tasks.distZip.shouldRunAfter tasks.javadocJar
check.dependsOn jacocoTestReport
afterReleaseBuild.dependsOn ":githubRelease"
afterReleaseBuild.dependsOn bintrayUpload
